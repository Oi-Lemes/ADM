// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id                    Int      @id @default(autoincrement())
  email                 String   @unique
  nome                  String?
  senha                 String?
  hasAccess             Boolean  @default(false) // <-- CORREÇÃO ADICIONADA AQUI
  createdAt             DateTime @default(now())
  progresso             ProgressoAula[]
  magicLinkToken        String?  @unique
  magicLinkTokenExpires DateTime?
}

model Modulo {
  id          Int      @id @default(autoincrement())
  titulo      String
  descricao   String
  imagemUrl   String?
  aulas       Aula[]
  contentUrl  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Aula {
  id          Int      @id @default(autoincrement())
  titulo      String
  descricao   String
  videoUrl    String
  modulo      Modulo   @relation(fields: [moduloId], references: [id])
  moduloId    Int
  progresso   ProgressoAula[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ProgressoAula {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  aula      Aula     @relation(fields: [aulaId], references: [id])
  aulaId    Int
  completed Boolean  @default(false)
  createdAt DateTime @default(now())

  @@unique([userId, aulaId])
}